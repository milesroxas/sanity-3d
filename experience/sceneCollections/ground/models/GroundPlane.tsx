/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { ThreeElements } from '@react-three/fiber'
type GLTFResult = GLTF & {
  nodes: {
    ['tile-plain-nb002']: THREE.Mesh
  }
  materials: {
    ['14 BROWN-LIGHTEST.002']: THREE.MeshPhysicalMaterial
  }
}

export function GroundPlane(props: ThreeElements['group']) {
  const { nodes, materials } = useGLTF('/models/floor_plane.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="tile-plain-nb002"
          castShadow
          receiveShadow
          geometry={nodes['tile-plain-nb002'].geometry}
          material={materials['14 BROWN-LIGHTEST.002']}
          position={[-196.257, 2.667, 165]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/floor_plane.glb')
