/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ThreeElements } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    ["windmill-base_1"]: THREE.Mesh;
    ["windmill-base_2"]: THREE.Mesh;
    ["windmill-head"]: THREE.Mesh;
    ["windmill-propeller"]: THREE.Mesh;
  };
  materials: {
    ["23 GREY-WHITE"]: THREE.MeshPhysicalMaterial;
    ["21 GREY LIGHT"]: THREE.MeshPhysicalMaterial;
    ["22 GREY-LIGHTEST"]: THREE.MeshPhysicalMaterial;
  };
};

type WindmillProps = ThreeElements["group"] & {
  speed?: number;
  rotation?: [number, number, number] | THREE.Euler | undefined;
};

const MODEL_PATH = "/models/windmill.glb";
useGLTF.preload(MODEL_PATH);

export function Windmill({ speed = 1, rotation = [0, 0, 0], ...props }: WindmillProps) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(MODEL_PATH) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const action = actions["windmill-propellerAction.001"];
    if (action) {
      // Stop any existing animation
      action.stop();
      // Configure the animation
      action.timeScale = speed;
      action.setLoop(THREE.LoopRepeat, Infinity);
      action.clampWhenFinished = false;
      // Start from beginning and play
      action.reset();
      action.play();
    }
  }, [speed, actions]);

  return (
    <group ref={group} {...props} rotation={rotation}>
      <mesh
        geometry={nodes["windmill-base_1"].geometry}
        material={materials["23 GREY-WHITE"]}
      />
      <mesh
        geometry={nodes["windmill-base_2"].geometry}
        material={materials["21 GREY LIGHT"]}
      />
      <mesh
        geometry={nodes["windmill-head"].geometry}
        material={materials["22 GREY-LIGHTEST"]}
        position={[0.016, 14.84, 0.147]}
      />
      <mesh
        name="windmill-propeller"
        geometry={nodes["windmill-propeller"].geometry}
        material={materials["23 GREY-WHITE"]}
        position={[0.016, 14.84, -0.908]}
      />
    </group>
  );
}
