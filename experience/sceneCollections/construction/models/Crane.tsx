/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { ThreeElements } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    ['crane-tower-base_1']: THREE.Mesh
    ['crane-tower-base_2']: THREE.Mesh
    ['crane-tower-base_3']: THREE.Mesh
    ['crane-tower-hook_1']: THREE.Mesh
    ['crane-tower-hook_2']: THREE.Mesh
    ['crane-tower-slider']: THREE.Mesh
    ['crane-tower-top_1']: THREE.Mesh
    ['crane-tower-top_2']: THREE.Mesh
    ['crane-tower-top_3']: THREE.Mesh
    ['crane-tower-top_4']: THREE.Mesh
  }
  materials: {
    ['17 GREY-DARKEST.009']: THREE.MeshPhysicalMaterial
    ['20 GREY.002']: THREE.MeshPhysicalMaterial
    ['29 ORANGE-LIGHT']: THREE.MeshPhysicalMaterial
    ['20 GREY.002']: THREE.MeshPhysicalMaterial
    ['29 ORANGE-LIGHT']: THREE.MeshPhysicalMaterial
    ['17 GREY-DARKEST.009']: THREE.MeshPhysicalMaterial
    ['21 GREY LIGHT.001']: THREE.MeshPhysicalMaterial
    ['64 GLASS.002']: THREE.MeshPhysicalMaterial
  }
}

export function Crane(props: ThreeElements["group"]) {
  const { nodes, materials } = useGLTF('/models/vehicles_crane.glb') as GLTFResult
  
  return (
    <group {...props} dispose={null}>
      <group>
        <group position={[101.909790, 2.666656, -101.998489]} rotation={[0, -0.931, 0]} scale={0.47}>
          <group position={[15, 0, -15]}>
            <group>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['crane-tower-base_1'].geometry}
                material={materials['17 GREY-DARKEST.009']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['crane-tower-base_2'].geometry}
                material={materials['20 GREY.002']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['crane-tower-base_3'].geometry}
                material={materials['29 ORANGE-LIGHT']}
              />
            </group>
            <group>
              <group position={[0, 57.91, 37.662]}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['crane-tower-hook_1'].geometry}
                  material={materials['20 GREY.002']}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['crane-tower-hook_2'].geometry}
                  material={materials['29 ORANGE-LIGHT']}
                />
              </group>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['crane-tower-slider'].geometry}
                material={materials['17 GREY-DARKEST.009']}
                position={[0, 59.436, 37.678]}
              />
              <group position={[0, 55.301, 0]}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['crane-tower-top_1'].geometry}
                  material={materials['17 GREY-DARKEST.009']}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['crane-tower-top_2'].geometry}
                  material={materials['21 GREY LIGHT.001']}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['crane-tower-top_3'].geometry}
                  material={materials['29 ORANGE-LIGHT']}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['crane-tower-top_4'].geometry}
                  material={materials['64 GLASS.002']}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/vehicles_crane.glb')
