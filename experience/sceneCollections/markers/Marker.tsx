/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { ThreeElements } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    ["mesh-marker"]: THREE.Mesh;
  };
  materials: {
    ["marker-material"]: THREE.MeshStandardMaterial;
  };
};

export function Marker(props: ThreeElements["group"]) {
  const { nodes, materials } = useGLTF("/models/marker.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="mesh-marker"
        geometry={nodes["mesh-marker"].geometry}
        material={materials["marker-material"]}
        scale={0.668}
      />
    </group>
  );
}

useGLTF.preload("/models/marker.glb");
